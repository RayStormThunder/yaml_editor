# Q. What is this file?
# A. This file contains options which allow you to configure your multiworld experience while allowing
#    others to play how they want as well.
#
# Q. How do I use it?
# A. The options in this file are weighted. This means the higher number you assign to a value, the
#    more chances you have for that option to be chosen. For example, an option like this:
#
#    map_shuffle:
#      on: 5
#      off: 15
#
#    Means you have 5 chances for map shuffle to occur, and 15 chances for map shuffle to be turned
#    off.
#
# Q. I've never seen a file like this before. What characters am I allowed to use?
# A. This is a .yaml file. You are allowed to use most characters.
#    To test if your yaml is valid or not, you can use this website:
#        http://www.yamllint.com/
#    You can also verify that your Archipelago options are valid at this site:
#        https://archipelago.gg/check

# Your name in-game, limited to 16 characters.
#     {player} will be replaced with the player's slot number.
#     {PLAYER} will be replaced with the player's slot number, if that slot number is greater than 1.
#     {number} will be replaced with the counter value of the name.
#     {NUMBER} will be replaced with the counter value of the name, if the counter value is greater than 1.
name: Player{number}

# Used to describe your yaml. Useful if you have multiple files.
description: Default Civilization VI Template

game: Civilization VI
requires:
  version: 0.6.0 # Version of Archipelago required for this yaml to work as expected.

Civilization VI:
  # Game Options
  progression_balancing:
    # A system that can move progression earlier, to try and prevent the player from getting stuck and bored early.
    # 
    # A lower setting means more getting stuck. A higher setting means less getting stuck.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 0
    # Maximum value is 99
    random: 0
    random-low: 0
    random-high: 0
    disabled: 0 # equivalent to 0
    normal: 50 # equivalent to 50
    extreme: 0 # equivalent to 99

  accessibility:
    # Set rules for reachability of your items/locations.
    # 
    # **Full:** ensure everything can be reached and acquired.
    # 
    # **Minimal:** ensure what is needed to reach your goal can be acquired.
    full: 50
    minimal: 0

  progression_style:
    # **Districts Only**: Each tech/civic that would normally unlock a district or building now has a logical progression.
    # Example: TECH_BRONZE_WORKING is now PROGRESSIVE_ENCAMPMENT
    # 
    # **Eras and Districts**: Players will be defeated if they play until the world era advances beyond the currently unlocked maximum era.
    # Unlocked eras can be seen in both the tech and civic trees. Includes all progressive districts.
    # 
    # **None**: No progressive items will be included. This means you can get district upgrades that won't be usable until the relevant district is unlocked.
    districts_only: 50
    eras_and_districts: 0
    none: 0

  shuffle_goody_hut_rewards:
    # Shuffles the goody hut rewards.
    # Goody huts will only contain junk items and locations are checked sequentially (First goody hut gives GOODY_HUT_1, second gives GOODY_HUT_2, etc.).
    'false': 0
    'true': 50

  boostsanity:
    # Boosts for Civics/Techs are location checks. Boosts can now be triggered even if the item has already been
    # researched.
    # 
    # **Note**: If a boost is dependent upon a unit that is now obsolete, you can click to toggle on/off the relevant tech in
    # the tech tree.
    'false': 50
    'true': 0

  research_cost_multiplier:
    # Multiplier for research cost of techs and civics, higher values make research more expensive.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 50
    # Maximum value is 150
    100: 50
    random: 0
    random-low: 0
    random-high: 0

  pre_hint_items:
    # Controls what items from the tech/civics trees are pre-hinted for the multiworld.
    # **Progression**: Include Progression items in hints
    # **Useful**: Include Useful items in hints
    # **Filler**: Include Filler items in hints
    []

  hide_item_names:
    # Each Tech and Civic Location will have a title of 'Unrevealed' until its prereqs have been researched. Note that
    # hints will still be precollected if that option is enabled.
    'false': 50
    'true': 0

  advisor_show_progression_items:
    # If enabled, an advisor icon will be added to any location that contains a progression item.
    'false': 0
    'true': 50

  death_link:
    # If enabled, losing a unit will trigger a death link effect on other players in the multiworld. When a death link is received, the player will receive the effect specified in 'Death Link Effect'.
    'false': 50
    'true': 0

  death_link_effect:
    # What happens when a unit dies.
    # 
    # **Unit Killed**: A random unit will be killed when a death link is received.
    # 
    # **Faith**: Faith will be decreased by the amount specified in 'Death Link Effect Percent'.
    # 
    # **Gold**: Gold will be decreased by the amount specified in 'Death Link Effect Percent'.
    # 
    # **Era Score**: Era score is decreased by 1.
    ['Unit Killed']

  death_link_effect_percent:
    # The percentage of the effect that will be applied. Only applicable for Gold and Faith effects.
    #
    # You can define additional values between the minimum and maximum values.
    # Minimum value is 1
    # Maximum value is 100
    20: 50
    random: 0
    random-low: 0
    random-high: 0

  # Item & Location Options
  local_items:
    # Forces these items to be in their native world.
    []

  non_local_items:
    # Forces these items to be outside their native world.
    []

  start_inventory:
    # Start with these items.
    {}

  start_inventory_from_pool:
    # Start with these items and don't place them in the world.
    # 
    # The game decides what the replacement items will be.
    {}

  start_hints:
    # Start with these item's locations prefilled into the ``!hint`` command.
    []

  start_location_hints:
    # Start with these locations and their item prefilled into the ``!hint`` command.
    []

  exclude_locations:
    # Prevent these locations from having an important item.
    []

  priority_locations:
    # Prevent these locations from having an unimportant item.
    []

  item_links:
    # Share part of your item pool with other players.
    []
